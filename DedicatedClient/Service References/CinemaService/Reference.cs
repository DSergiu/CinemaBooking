//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DedicatedClient.CinemaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserLogin", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
    [System.SerializableAttribute()]
    public partial class UserLogin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailORphoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailORphone {
            get {
                return this.emailORphoneField;
            }
            set {
                if ((object.ReferenceEquals(this.emailORphoneField, value) != true)) {
                    this.emailORphoneField = value;
                    this.RaisePropertyChanged("emailORphone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginResult", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
    [System.SerializableAttribute()]
    public partial class LoginResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TokenKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TokenKey {
            get {
                return this.TokenKeyField;
            }
            set {
                if ((this.TokenKeyField.Equals(value) != true)) {
                    this.TokenKeyField = value;
                    this.RaisePropertyChanged("TokenKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
    [System.SerializableAttribute()]
    public partial class ValidationError : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyName {
            get {
                return this.PropertyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyNameField, value) != true)) {
                    this.PropertyNameField = value;
                    this.RaisePropertyChanged("PropertyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRegister", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
    [System.SerializableAttribute()]
    public partial class UserRegister : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmPassword {
            get {
                return this.ConfirmPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmPasswordField, value) != true)) {
                    this.ConfirmPasswordField = value;
                    this.RaisePropertyChanged("ConfirmPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CreateUserResult", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
    [System.SerializableAttribute()]
    public partial class CreateUserResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserKey {
            get {
                return this.UserKeyField;
            }
            set {
                if ((this.UserKeyField.Equals(value) != true)) {
                    this.UserKeyField = value;
                    this.RaisePropertyChanged("UserKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.AccessType AccessLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastLoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UpdatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.AccessType AccessLevel {
            get {
                return this.AccessLevelField;
            }
            set {
                if ((this.AccessLevelField.Equals(value) != true)) {
                    this.AccessLevelField = value;
                    this.RaisePropertyChanged("AccessLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastLogin {
            get {
                return this.LastLoginField;
            }
            set {
                if ((this.LastLoginField.Equals(value) != true)) {
                    this.LastLoginField = value;
                    this.RaisePropertyChanged("LastLogin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UpdatedBy {
            get {
                return this.UpdatedByField;
            }
            set {
                if ((this.UpdatedByField.Equals(value) != true)) {
                    this.UpdatedByField = value;
                    this.RaisePropertyChanged("UpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedOn {
            get {
                return this.UpdatedOnField;
            }
            set {
                if ((this.UpdatedOnField.Equals(value) != true)) {
                    this.UpdatedOnField = value;
                    this.RaisePropertyChanged("UpdatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessType", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    public enum AccessType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Basic = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Employee = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BookingModel", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
    [System.SerializableAttribute()]
    public partial class BookingModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ScreeningIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.TicketModel[] TicketsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> UserGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ScreeningId {
            get {
                return this.ScreeningIdField;
            }
            set {
                if ((this.ScreeningIdField.Equals(value) != true)) {
                    this.ScreeningIdField = value;
                    this.RaisePropertyChanged("ScreeningId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.TicketModel[] Tickets {
            get {
                return this.TicketsField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketsField, value) != true)) {
                    this.TicketsField = value;
                    this.RaisePropertyChanged("Tickets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketModel", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
    [System.SerializableAttribute()]
    public partial class TicketModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> RowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TicketTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Column {
            get {
                return this.ColumnField;
            }
            set {
                if ((this.ColumnField.Equals(value) != true)) {
                    this.ColumnField = value;
                    this.RaisePropertyChanged("Column");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TicketTypeId {
            get {
                return this.TicketTypeIdField;
            }
            set {
                if ((this.TicketTypeIdField.Equals(value) != true)) {
                    this.TicketTypeIdField = value;
                    this.RaisePropertyChanged("TicketTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Booking", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class Booking : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCanceledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PaidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.Screening ScreeningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScreeningIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.Ticket[] TicketsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TotalPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid UserGuidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookingId {
            get {
                return this.BookingIdField;
            }
            set {
                if ((this.BookingIdField.Equals(value) != true)) {
                    this.BookingIdField = value;
                    this.RaisePropertyChanged("BookingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((this.CreatedByField.Equals(value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCanceled {
            get {
                return this.IsCanceledField;
            }
            set {
                if ((this.IsCanceledField.Equals(value) != true)) {
                    this.IsCanceledField = value;
                    this.RaisePropertyChanged("IsCanceled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Paid {
            get {
                return this.PaidField;
            }
            set {
                if ((this.PaidField.Equals(value) != true)) {
                    this.PaidField = value;
                    this.RaisePropertyChanged("Paid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.Screening Screening {
            get {
                return this.ScreeningField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreeningField, value) != true)) {
                    this.ScreeningField = value;
                    this.RaisePropertyChanged("Screening");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreeningId {
            get {
                return this.ScreeningIdField;
            }
            set {
                if ((this.ScreeningIdField.Equals(value) != true)) {
                    this.ScreeningIdField = value;
                    this.RaisePropertyChanged("ScreeningId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.Ticket[] Tickets {
            get {
                return this.TicketsField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketsField, value) != true)) {
                    this.TicketsField = value;
                    this.RaisePropertyChanged("Tickets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid UserGuid {
            get {
                return this.UserGuidField;
            }
            set {
                if ((this.UserGuidField.Equals(value) != true)) {
                    this.UserGuidField = value;
                    this.RaisePropertyChanged("UserGuid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Screening", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class Screening : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ScreeningDateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScreeningIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.ScreeningInfo ScreeningInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScreeningInfoIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ScreeningDateTime {
            get {
                return this.ScreeningDateTimeField;
            }
            set {
                if ((this.ScreeningDateTimeField.Equals(value) != true)) {
                    this.ScreeningDateTimeField = value;
                    this.RaisePropertyChanged("ScreeningDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreeningId {
            get {
                return this.ScreeningIdField;
            }
            set {
                if ((this.ScreeningIdField.Equals(value) != true)) {
                    this.ScreeningIdField = value;
                    this.RaisePropertyChanged("ScreeningId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.ScreeningInfo ScreeningInfo {
            get {
                return this.ScreeningInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ScreeningInfoField, value) != true)) {
                    this.ScreeningInfoField = value;
                    this.RaisePropertyChanged("ScreeningInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreeningInfoId {
            get {
                return this.ScreeningInfoIdField;
            }
            set {
                if ((this.ScreeningInfoIdField.Equals(value) != true)) {
                    this.ScreeningInfoIdField = value;
                    this.RaisePropertyChanged("ScreeningInfoId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Ticket", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class Ticket : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BookingIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.TicketType TicketTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketTypeIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BookingId {
            get {
                return this.BookingIdField;
            }
            set {
                if ((this.BookingIdField.Equals(value) != true)) {
                    this.BookingIdField = value;
                    this.RaisePropertyChanged("BookingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Column {
            get {
                return this.ColumnField;
            }
            set {
                if ((this.ColumnField.Equals(value) != true)) {
                    this.ColumnField = value;
                    this.RaisePropertyChanged("Column");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketId {
            get {
                return this.TicketIdField;
            }
            set {
                if ((this.TicketIdField.Equals(value) != true)) {
                    this.TicketIdField = value;
                    this.RaisePropertyChanged("TicketId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.TicketType TicketType {
            get {
                return this.TicketTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TicketTypeField, value) != true)) {
                    this.TicketTypeField = value;
                    this.RaisePropertyChanged("TicketType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketTypeId {
            get {
                return this.TicketTypeIdField;
            }
            set {
                if ((this.TicketTypeIdField.Equals(value) != true)) {
                    this.TicketTypeIdField = value;
                    this.RaisePropertyChanged("TicketTypeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScreeningInfo", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class ScreeningInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.Hall HallField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HallIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.Movie MovieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ScreeningInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float TicketPriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.Hall Hall {
            get {
                return this.HallField;
            }
            set {
                if ((object.ReferenceEquals(this.HallField, value) != true)) {
                    this.HallField = value;
                    this.RaisePropertyChanged("Hall");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HallId {
            get {
                return this.HallIdField;
            }
            set {
                if ((this.HallIdField.Equals(value) != true)) {
                    this.HallIdField = value;
                    this.RaisePropertyChanged("HallId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.Movie Movie {
            get {
                return this.MovieField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieField, value) != true)) {
                    this.MovieField = value;
                    this.RaisePropertyChanged("Movie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId {
            get {
                return this.MovieIdField;
            }
            set {
                if ((this.MovieIdField.Equals(value) != true)) {
                    this.MovieIdField = value;
                    this.RaisePropertyChanged("MovieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ScreeningInfoId {
            get {
                return this.ScreeningInfoIdField;
            }
            set {
                if ((this.ScreeningInfoIdField.Equals(value) != true)) {
                    this.ScreeningInfoIdField = value;
                    this.RaisePropertyChanged("ScreeningInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float TicketPrice {
            get {
                return this.TicketPriceField;
            }
            set {
                if ((this.TicketPriceField.Equals(value) != true)) {
                    this.TicketPriceField = value;
                    this.RaisePropertyChanged("TicketPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hall", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class Hall : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HallIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HallNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.Seat[] SeatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HallId {
            get {
                return this.HallIdField;
            }
            set {
                if ((this.HallIdField.Equals(value) != true)) {
                    this.HallIdField = value;
                    this.RaisePropertyChanged("HallId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HallName {
            get {
                return this.HallNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HallNameField, value) != true)) {
                    this.HallNameField = value;
                    this.RaisePropertyChanged("HallName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.Seat[] Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((object.ReferenceEquals(this.SeatsField, value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Movie", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class Movie : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Is3DField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.MovieInfo MovieInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieInfoIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Is3D {
            get {
                return this.Is3DField;
            }
            set {
                if ((this.Is3DField.Equals(value) != true)) {
                    this.Is3DField = value;
                    this.RaisePropertyChanged("Is3D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieId {
            get {
                return this.MovieIdField;
            }
            set {
                if ((this.MovieIdField.Equals(value) != true)) {
                    this.MovieIdField = value;
                    this.RaisePropertyChanged("MovieId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.MovieInfo MovieInfo {
            get {
                return this.MovieInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.MovieInfoField, value) != true)) {
                    this.MovieInfoField = value;
                    this.RaisePropertyChanged("MovieInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieInfoId {
            get {
                return this.MovieInfoIdField;
            }
            set {
                if ((this.MovieInfoIdField.Equals(value) != true)) {
                    this.MovieInfoIdField = value;
                    this.RaisePropertyChanged("MovieInfoId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Seat", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class Seat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ColumnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HallIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.SeatType ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Column {
            get {
                return this.ColumnField;
            }
            set {
                if ((this.ColumnField.Equals(value) != true)) {
                    this.ColumnField = value;
                    this.RaisePropertyChanged("Column");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HallId {
            get {
                return this.HallIdField;
            }
            set {
                if ((this.HallIdField.Equals(value) != true)) {
                    this.HallIdField = value;
                    this.RaisePropertyChanged("HallId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Row {
            get {
                return this.RowField;
            }
            set {
                if ((this.RowField.Equals(value) != true)) {
                    this.RowField = value;
                    this.RaisePropertyChanged("Row");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.SeatType Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SeatType", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    public enum SeatType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoSeat = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormalSeat = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HandicapSeat = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MovieInfo", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class MovieInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActorsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DedicatedClient.CinemaService.AgeRestriction AgeRestrictionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LenghtTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MovieInfoIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ReleaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Actors {
            get {
                return this.ActorsField;
            }
            set {
                if ((object.ReferenceEquals(this.ActorsField, value) != true)) {
                    this.ActorsField = value;
                    this.RaisePropertyChanged("Actors");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DedicatedClient.CinemaService.AgeRestriction AgeRestriction {
            get {
                return this.AgeRestrictionField;
            }
            set {
                if ((this.AgeRestrictionField.Equals(value) != true)) {
                    this.AgeRestrictionField = value;
                    this.RaisePropertyChanged("AgeRestriction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Director {
            get {
                return this.DirectorField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectorField, value) != true)) {
                    this.DirectorField = value;
                    this.RaisePropertyChanged("Director");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LenghtTime {
            get {
                return this.LenghtTimeField;
            }
            set {
                if ((this.LenghtTimeField.Equals(value) != true)) {
                    this.LenghtTimeField = value;
                    this.RaisePropertyChanged("LenghtTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MovieInfoId {
            get {
                return this.MovieInfoIdField;
            }
            set {
                if ((this.MovieInfoIdField.Equals(value) != true)) {
                    this.MovieInfoIdField = value;
                    this.RaisePropertyChanged("MovieInfoId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ReleaseDate {
            get {
                return this.ReleaseDateField;
            }
            set {
                if ((this.ReleaseDateField.Equals(value) != true)) {
                    this.ReleaseDateField = value;
                    this.RaisePropertyChanged("ReleaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AgeRestriction", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    public enum AgeRestriction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        R_A = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        R_7 = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        R_11 = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        R_15 = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        R_F = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TicketType", Namespace="http://schemas.datacontract.org/2004/07/Cinema.Domain")]
    [System.SerializableAttribute()]
    public partial class TicketType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte DiscountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TicketTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte Discount {
            get {
                return this.DiscountField;
            }
            set {
                if ((this.DiscountField.Equals(value) != true)) {
                    this.DiscountField = value;
                    this.RaisePropertyChanged("Discount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TicketTypeId {
            get {
                return this.TicketTypeIdField;
            }
            set {
                if ((this.TicketTypeIdField.Equals(value) != true)) {
                    this.TicketTypeIdField = value;
                    this.RaisePropertyChanged("TicketTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CinemaService.ICinemaService")]
    public interface ICinemaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IUserService/LoginICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.LoginResult Login(DedicatedClient.CinemaService.UserLogin model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/Login", ReplyAction="http://tempuri.org/IUserService/LoginResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.LoginResult> LoginAsync(DedicatedClient.CinemaService.UserLogin model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IUserService/CreateUserICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.CreateUserResult CreateUser(DedicatedClient.CinemaService.UserRegister model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/CreateUser", ReplyAction="http://tempuri.org/IUserService/CreateUserResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.CreateUserResult> CreateUserAsync(DedicatedClient.CinemaService.UserRegister model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IUserService/UpdateUserICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void UpdateUser(DedicatedClient.CinemaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/UpdateUser", ReplyAction="http://tempuri.org/IUserService/UpdateUserResponse")]
        System.Threading.Tasks.Task UpdateUserAsync(DedicatedClient.CinemaService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IUserService/DeleteUserICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void DeleteUser(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(string userid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserProfile", ReplyAction="http://tempuri.org/IUserService/GetUserProfileResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IUserService/GetUserProfileICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.User GetUserProfile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserProfile", ReplyAction="http://tempuri.org/IUserService/GetUserProfileResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.User> GetUserProfileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IUserService/GetUserICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.User GetUser(string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUser", ReplyAction="http://tempuri.org/IUserService/GetUserResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.User> GetUserAsync(string userGuid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IUserService/GetUserByEmailICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.User GetUserByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByEmail", ReplyAction="http://tempuri.org/IUserService/GetUserByEmailResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.User> GetUserByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByPhone", ReplyAction="http://tempuri.org/IUserService/GetUserByPhoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IUserService/GetUserByPhoneICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.User GetUserByPhone(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetUserByPhone", ReplyAction="http://tempuri.org/IUserService/GetUserByPhoneResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.User> GetUserByPhoneAsync(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetusersByPage", ReplyAction="http://tempuri.org/IUserService/GetusersByPageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IUserService/GetusersByPageICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.User[] GetusersByPage(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserService/GetusersByPage", ReplyAction="http://tempuri.org/IUserService/GetusersByPageResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.User[]> GetusersByPageAsync(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateBooking", ReplyAction="http://tempuri.org/IBookingService/CreateBookingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IBookingService/CreateBookingICollectionOf_ValidationErrorFaul" +
            "t", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        int CreateBooking(DedicatedClient.CinemaService.BookingModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateBooking", ReplyAction="http://tempuri.org/IBookingService/CreateBookingResponse")]
        System.Threading.Tasks.Task<int> CreateBookingAsync(DedicatedClient.CinemaService.BookingModel model);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/DeleteBooking", ReplyAction="http://tempuri.org/IBookingService/DeleteBookingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IBookingService/DeleteBookingICollectionOf_ValidationErrorFaul" +
            "t", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void DeleteBooking(string bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/DeleteBooking", ReplyAction="http://tempuri.org/IBookingService/DeleteBookingResponse")]
        System.Threading.Tasks.Task DeleteBookingAsync(string bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBooking", ReplyAction="http://tempuri.org/IBookingService/GetBookingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IBookingService/GetBookingICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Booking GetBooking(string bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBooking", ReplyAction="http://tempuri.org/IBookingService/GetBookingResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Booking> GetBookingAsync(string bookingId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBookingsByPhone", ReplyAction="http://tempuri.org/IBookingService/GetBookingsByPhoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IBookingService/GetBookingsByPhoneICollectionOf_ValidationErro" +
            "rFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Booking[] GetBookingsByPhone(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBookingsByPhone", ReplyAction="http://tempuri.org/IBookingService/GetBookingsByPhoneResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Booking[]> GetBookingsByPhoneAsync(string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBookingsByScreeningId", ReplyAction="http://tempuri.org/IBookingService/GetBookingsByScreeningIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IBookingService/GetBookingsByScreeningIdICollectionOf_Validati" +
            "onErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Booking[] GetBookingsByScreeningId(string screeningId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetBookingsByScreeningId", ReplyAction="http://tempuri.org/IBookingService/GetBookingsByScreeningIdResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Booking[]> GetBookingsByScreeningIdAsync(string screeningId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllBookingsByPage", ReplyAction="http://tempuri.org/IBookingService/GetAllBookingsByPageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IBookingService/GetAllBookingsByPageICollectionOf_ValidationEr" +
            "rorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Booking[] GetAllBookingsByPage(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllBookingsByPage", ReplyAction="http://tempuri.org/IBookingService/GetAllBookingsByPageResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Booking[]> GetAllBookingsByPageAsync(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/CreateHall", ReplyAction="http://tempuri.org/IHallService/CreateHallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IHallService/CreateHallICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        int CreateHall(DedicatedClient.CinemaService.Hall hall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/CreateHall", ReplyAction="http://tempuri.org/IHallService/CreateHallResponse")]
        System.Threading.Tasks.Task<int> CreateHallAsync(DedicatedClient.CinemaService.Hall hall);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/UpdateHall", ReplyAction="http://tempuri.org/IHallService/UpdateHallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IHallService/UpdateHallICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void UpdateHall(DedicatedClient.CinemaService.Hall hall, string hallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/UpdateHall", ReplyAction="http://tempuri.org/IHallService/UpdateHallResponse")]
        System.Threading.Tasks.Task UpdateHallAsync(DedicatedClient.CinemaService.Hall hall, string hallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/DeleteHall", ReplyAction="http://tempuri.org/IHallService/DeleteHallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IHallService/DeleteHallICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void DeleteHall(string hallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/DeleteHall", ReplyAction="http://tempuri.org/IHallService/DeleteHallResponse")]
        System.Threading.Tasks.Task DeleteHallAsync(string hallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/GetHall", ReplyAction="http://tempuri.org/IHallService/GetHallResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IHallService/GetHallICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Hall GetHall(string hallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/GetHall", ReplyAction="http://tempuri.org/IHallService/GetHallResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Hall> GetHallAsync(string hallId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/GetHallByName", ReplyAction="http://tempuri.org/IHallService/GetHallByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IHallService/GetHallByNameICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Hall GetHallByName(string hallName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/GetHallByName", ReplyAction="http://tempuri.org/IHallService/GetHallByNameResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Hall> GetHallByNameAsync(string hallName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/GetAllHalls", ReplyAction="http://tempuri.org/IHallService/GetAllHallsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IHallService/GetAllHallsICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Hall[] GetAllHalls();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IHallService/GetAllHalls", ReplyAction="http://tempuri.org/IHallService/GetAllHallsResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Hall[]> GetAllHallsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeatService/CreateSeat", ReplyAction="http://tempuri.org/ISeatService/CreateSeatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ISeatService/CreateSeatICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void CreateSeat(DedicatedClient.CinemaService.Seat seat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeatService/CreateSeat", ReplyAction="http://tempuri.org/ISeatService/CreateSeatResponse")]
        System.Threading.Tasks.Task CreateSeatAsync(DedicatedClient.CinemaService.Seat seat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeatService/UpdateSeat", ReplyAction="http://tempuri.org/ISeatService/UpdateSeatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ISeatService/UpdateSeatICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void UpdateSeat(DedicatedClient.CinemaService.Seat seat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeatService/UpdateSeat", ReplyAction="http://tempuri.org/ISeatService/UpdateSeatResponse")]
        System.Threading.Tasks.Task UpdateSeatAsync(DedicatedClient.CinemaService.Seat seat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeatService/DeleteSeat", ReplyAction="http://tempuri.org/ISeatService/DeleteSeatResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ISeatService/DeleteSeatICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void DeleteSeat(DedicatedClient.CinemaService.Seat seat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeatService/DeleteSeat", ReplyAction="http://tempuri.org/ISeatService/DeleteSeatResponse")]
        System.Threading.Tasks.Task DeleteSeatAsync(DedicatedClient.CinemaService.Seat seat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetTicket", ReplyAction="http://tempuri.org/ITicketService/GetTicketResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ITicketService/GetTicketICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Ticket GetTicket(string ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketService/GetTicket", ReplyAction="http://tempuri.org/ITicketService/GetTicketResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Ticket> GetTicketAsync(string ticketId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetTicketType", ReplyAction="http://tempuri.org/ITicketTypeService/GetTicketTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ITicketTypeService/GetTicketTypeICollectionOf_ValidationErrorF" +
            "ault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.TicketType GetTicketType(string tickettypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetTicketType", ReplyAction="http://tempuri.org/ITicketTypeService/GetTicketTypeResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.TicketType> GetTicketTypeAsync(string tickettypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetTicketTypeByType", ReplyAction="http://tempuri.org/ITicketTypeService/GetTicketTypeByTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ITicketTypeService/GetTicketTypeByTypeICollectionOf_Validation" +
            "ErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.TicketType GetTicketTypeByType(string ticketType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetTicketTypeByType", ReplyAction="http://tempuri.org/ITicketTypeService/GetTicketTypeByTypeResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.TicketType> GetTicketTypeByTypeAsync(string ticketType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetAllTicketTypes", ReplyAction="http://tempuri.org/ITicketTypeService/GetAllTicketTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ITicketTypeService/GetAllTicketTypesICollectionOf_ValidationEr" +
            "rorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.TicketType[] GetAllTicketTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/GetAllTicketTypes", ReplyAction="http://tempuri.org/ITicketTypeService/GetAllTicketTypesResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.TicketType[]> GetAllTicketTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/CreateTicketType", ReplyAction="http://tempuri.org/ITicketTypeService/CreateTicketTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ITicketTypeService/CreateTicketTypeICollectionOf_ValidationErr" +
            "orFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        int CreateTicketType(DedicatedClient.CinemaService.TicketType tickettype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/CreateTicketType", ReplyAction="http://tempuri.org/ITicketTypeService/CreateTicketTypeResponse")]
        System.Threading.Tasks.Task<int> CreateTicketTypeAsync(DedicatedClient.CinemaService.TicketType tickettype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/UpdateTicketType", ReplyAction="http://tempuri.org/ITicketTypeService/UpdateTicketTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ITicketTypeService/UpdateTicketTypeICollectionOf_ValidationErr" +
            "orFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void UpdateTicketType(DedicatedClient.CinemaService.TicketType tickettype, string tickettypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/UpdateTicketType", ReplyAction="http://tempuri.org/ITicketTypeService/UpdateTicketTypeResponse")]
        System.Threading.Tasks.Task UpdateTicketTypeAsync(DedicatedClient.CinemaService.TicketType tickettype, string tickettypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/DeleteTicketType", ReplyAction="http://tempuri.org/ITicketTypeService/DeleteTicketTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/ITicketTypeService/DeleteTicketTypeICollectionOf_ValidationErr" +
            "orFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void DeleteTicketType(string tickettypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITicketTypeService/DeleteTicketType", ReplyAction="http://tempuri.org/ITicketTypeService/DeleteTicketTypeResponse")]
        System.Threading.Tasks.Task DeleteTicketTypeAsync(string tickettypeId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateMovie", ReplyAction="http://tempuri.org/IMovieService/CreateMovieResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieService/CreateMovieICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        int CreateMovie(DedicatedClient.CinemaService.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/CreateMovie", ReplyAction="http://tempuri.org/IMovieService/CreateMovieResponse")]
        System.Threading.Tasks.Task<int> CreateMovieAsync(DedicatedClient.CinemaService.Movie movie);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateMovie", ReplyAction="http://tempuri.org/IMovieService/UpdateMovieResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieService/UpdateMovieICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void UpdateMovie(DedicatedClient.CinemaService.Movie movie, string movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/UpdateMovie", ReplyAction="http://tempuri.org/IMovieService/UpdateMovieResponse")]
        System.Threading.Tasks.Task UpdateMovieAsync(DedicatedClient.CinemaService.Movie movie, string movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteMovie", ReplyAction="http://tempuri.org/IMovieService/DeleteMovieResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieService/DeleteMovieICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void DeleteMovie(string movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/DeleteMovie", ReplyAction="http://tempuri.org/IMovieService/DeleteMovieResponse")]
        System.Threading.Tasks.Task DeleteMovieAsync(string movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetMovie", ReplyAction="http://tempuri.org/IMovieService/GetMovieResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieService/GetMovieICollectionOf_ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Movie GetMovie(string movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetMovie", ReplyAction="http://tempuri.org/IMovieService/GetMovieResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Movie> GetMovieAsync(string movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetMoviePerPage", ReplyAction="http://tempuri.org/IMovieService/GetMoviePerPageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieService/GetMoviePerPageICollectionOf_ValidationErrorFaul" +
            "t", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Movie[] GetMoviePerPage(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetMoviePerPage", ReplyAction="http://tempuri.org/IMovieService/GetMoviePerPageResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Movie[]> GetMoviePerPageAsync(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetMoviesByTitle", ReplyAction="http://tempuri.org/IMovieService/GetMoviesByTitleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieService/GetMoviesByTitleICollectionOf_ValidationErrorFau" +
            "lt", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Movie[] GetMoviesByTitle(string movieTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieService/GetMoviesByTitle", ReplyAction="http://tempuri.org/IMovieService/GetMoviesByTitleResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Movie[]> GetMoviesByTitleAsync(string movieTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/CreateMovieInfo", ReplyAction="http://tempuri.org/IMovieInfoService/CreateMovieInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieInfoService/CreateMovieInfoICollectionOf_ValidationError" +
            "Fault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        int CreateMovieInfo(DedicatedClient.CinemaService.MovieInfo movieinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/CreateMovieInfo", ReplyAction="http://tempuri.org/IMovieInfoService/CreateMovieInfoResponse")]
        System.Threading.Tasks.Task<int> CreateMovieInfoAsync(DedicatedClient.CinemaService.MovieInfo movieinfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/UpdateMovieInfo", ReplyAction="http://tempuri.org/IMovieInfoService/UpdateMovieInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieInfoService/UpdateMovieInfoICollectionOf_ValidationError" +
            "Fault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void UpdateMovieInfo(DedicatedClient.CinemaService.MovieInfo movieinfo, string movieinfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/UpdateMovieInfo", ReplyAction="http://tempuri.org/IMovieInfoService/UpdateMovieInfoResponse")]
        System.Threading.Tasks.Task UpdateMovieInfoAsync(DedicatedClient.CinemaService.MovieInfo movieinfo, string movieinfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/DeleteMovieInfo", ReplyAction="http://tempuri.org/IMovieInfoService/DeleteMovieInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieInfoService/DeleteMovieInfoICollectionOf_ValidationError" +
            "Fault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void DeleteMovieInfo(string movieinfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/DeleteMovieInfo", ReplyAction="http://tempuri.org/IMovieInfoService/DeleteMovieInfoResponse")]
        System.Threading.Tasks.Task DeleteMovieInfoAsync(string movieinfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/GetMovieInfo", ReplyAction="http://tempuri.org/IMovieInfoService/GetMovieInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieInfoService/GetMovieInfoICollectionOf_ValidationErrorFau" +
            "lt", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.MovieInfo GetMovieInfo(string movieinfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/GetMovieInfo", ReplyAction="http://tempuri.org/IMovieInfoService/GetMovieInfoResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.MovieInfo> GetMovieInfoAsync(string movieinfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/GetMovieInfosPerPage", ReplyAction="http://tempuri.org/IMovieInfoService/GetMovieInfosPerPageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IMovieInfoService/GetMovieInfosPerPageICollectionOf_Validation" +
            "ErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.MovieInfo[] GetMovieInfosPerPage(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMovieInfoService/GetMovieInfosPerPage", ReplyAction="http://tempuri.org/IMovieInfoService/GetMovieInfosPerPageResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.MovieInfo[]> GetMovieInfosPerPageAsync(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/CreateScreening", ReplyAction="http://tempuri.org/IScreeningService/CreateScreeningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningService/CreateScreeningICollectionOf_ValidationError" +
            "Fault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        int CreateScreening(DedicatedClient.CinemaService.Screening screening);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/CreateScreening", ReplyAction="http://tempuri.org/IScreeningService/CreateScreeningResponse")]
        System.Threading.Tasks.Task<int> CreateScreeningAsync(DedicatedClient.CinemaService.Screening screening);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateScreening", ReplyAction="http://tempuri.org/IScreeningService/UpdateScreeningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningService/UpdateScreeningICollectionOf_ValidationError" +
            "Fault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void UpdateScreening(DedicatedClient.CinemaService.Screening screening, string screeningId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/UpdateScreening", ReplyAction="http://tempuri.org/IScreeningService/UpdateScreeningResponse")]
        System.Threading.Tasks.Task UpdateScreeningAsync(DedicatedClient.CinemaService.Screening screening, string screeningId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/DeleteScreening", ReplyAction="http://tempuri.org/IScreeningService/DeleteScreeningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningService/DeleteScreeningICollectionOf_ValidationError" +
            "Fault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void DeleteScreening(string screeningId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/DeleteScreening", ReplyAction="http://tempuri.org/IScreeningService/DeleteScreeningResponse")]
        System.Threading.Tasks.Task DeleteScreeningAsync(string screeningId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetScreening", ReplyAction="http://tempuri.org/IScreeningService/GetScreeningResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningService/GetScreeningICollectionOf_ValidationErrorFau" +
            "lt", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Screening GetScreening(string screeningId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetScreening", ReplyAction="http://tempuri.org/IScreeningService/GetScreeningResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Screening> GetScreeningAsync(string screeningId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetScreeningsPerPage", ReplyAction="http://tempuri.org/IScreeningService/GetScreeningsPerPageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningService/GetScreeningsPerPageICollectionOf_Validation" +
            "ErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Screening[] GetScreeningsPerPage(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetScreeningsPerPage", ReplyAction="http://tempuri.org/IScreeningService/GetScreeningsPerPageResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Screening[]> GetScreeningsPerPageAsync(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetSeatsSuggestion", ReplyAction="http://tempuri.org/IScreeningService/GetSeatsSuggestionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningService/GetSeatsSuggestionICollectionOf_ValidationEr" +
            "rorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.Seat[] GetSeatsSuggestion(string screeningId, string noOfTickets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningService/GetSeatsSuggestion", ReplyAction="http://tempuri.org/IScreeningService/GetSeatsSuggestionResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.Seat[]> GetSeatsSuggestionAsync(string screeningId, string noOfTickets);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/CreateScreeningInfo", ReplyAction="http://tempuri.org/IScreeningInfoService/CreateScreeningInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningInfoService/CreateScreeningInfoICollectionOf_Validat" +
            "ionErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        int CreateScreeningInfo(DedicatedClient.CinemaService.ScreeningInfo screeninginfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/CreateScreeningInfo", ReplyAction="http://tempuri.org/IScreeningInfoService/CreateScreeningInfoResponse")]
        System.Threading.Tasks.Task<int> CreateScreeningInfoAsync(DedicatedClient.CinemaService.ScreeningInfo screeninginfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/UpdateScreeningInfo", ReplyAction="http://tempuri.org/IScreeningInfoService/UpdateScreeningInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningInfoService/UpdateScreeningInfoICollectionOf_Validat" +
            "ionErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void UpdateScreeningInfo(DedicatedClient.CinemaService.ScreeningInfo screeninginfo, string screeninginfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/UpdateScreeningInfo", ReplyAction="http://tempuri.org/IScreeningInfoService/UpdateScreeningInfoResponse")]
        System.Threading.Tasks.Task UpdateScreeningInfoAsync(DedicatedClient.CinemaService.ScreeningInfo screeninginfo, string screeninginfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/DeleteScreeningInfo", ReplyAction="http://tempuri.org/IScreeningInfoService/DeleteScreeningInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningInfoService/DeleteScreeningInfoICollectionOf_Validat" +
            "ionErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        void DeleteScreeningInfo(string screeninginfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/DeleteScreeningInfo", ReplyAction="http://tempuri.org/IScreeningInfoService/DeleteScreeningInfoResponse")]
        System.Threading.Tasks.Task DeleteScreeningInfoAsync(string screeninginfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/GetScreeningInfo", ReplyAction="http://tempuri.org/IScreeningInfoService/GetScreeningInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningInfoService/GetScreeningInfoICollectionOf_Validation" +
            "ErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.ScreeningInfo GetScreeningInfo(string screeninginfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/GetScreeningInfo", ReplyAction="http://tempuri.org/IScreeningInfoService/GetScreeningInfoResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.ScreeningInfo> GetScreeningInfoAsync(string screeninginfoId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByMovieId", ReplyAction="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByMovieIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByMovieIdICollectionOf_" +
            "ValidationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.ScreeningInfo[] GetScreeningInfosByMovieId(string movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByMovieId", ReplyAction="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByMovieIdResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.ScreeningInfo[]> GetScreeningInfosByMovieIdAsync(string movieId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByPage", ReplyAction="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByPageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(DedicatedClient.CinemaService.ValidationError[]), Action="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByPageICollectionOf_Val" +
            "idationErrorFault", Name="ArrayOfValidationError", Namespace="http://schemas.datacontract.org/2004/07/Cinema.WCFService.Models")]
        DedicatedClient.CinemaService.ScreeningInfo[] GetScreeningInfosByPage(string page, string noperpage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByPage", ReplyAction="http://tempuri.org/IScreeningInfoService/GetScreeningInfosByPageResponse")]
        System.Threading.Tasks.Task<DedicatedClient.CinemaService.ScreeningInfo[]> GetScreeningInfosByPageAsync(string page, string noperpage);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICinemaServiceChannel : DedicatedClient.CinemaService.ICinemaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CinemaServiceClient : System.ServiceModel.ClientBase<DedicatedClient.CinemaService.ICinemaService>, DedicatedClient.CinemaService.ICinemaService {
        
        public CinemaServiceClient() {
        }
        
        public CinemaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CinemaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CinemaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CinemaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DedicatedClient.CinemaService.LoginResult Login(DedicatedClient.CinemaService.UserLogin model) {
            return base.Channel.Login(model);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.LoginResult> LoginAsync(DedicatedClient.CinemaService.UserLogin model) {
            return base.Channel.LoginAsync(model);
        }
        
        public DedicatedClient.CinemaService.CreateUserResult CreateUser(DedicatedClient.CinemaService.UserRegister model) {
            return base.Channel.CreateUser(model);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.CreateUserResult> CreateUserAsync(DedicatedClient.CinemaService.UserRegister model) {
            return base.Channel.CreateUserAsync(model);
        }
        
        public void UpdateUser(DedicatedClient.CinemaService.User user) {
            base.Channel.UpdateUser(user);
        }
        
        public System.Threading.Tasks.Task UpdateUserAsync(DedicatedClient.CinemaService.User user) {
            return base.Channel.UpdateUserAsync(user);
        }
        
        public void DeleteUser(string userid) {
            base.Channel.DeleteUser(userid);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(string userid) {
            return base.Channel.DeleteUserAsync(userid);
        }
        
        public DedicatedClient.CinemaService.User GetUserProfile() {
            return base.Channel.GetUserProfile();
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.User> GetUserProfileAsync() {
            return base.Channel.GetUserProfileAsync();
        }
        
        public DedicatedClient.CinemaService.User GetUser(string userGuid) {
            return base.Channel.GetUser(userGuid);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.User> GetUserAsync(string userGuid) {
            return base.Channel.GetUserAsync(userGuid);
        }
        
        public DedicatedClient.CinemaService.User GetUserByEmail(string email) {
            return base.Channel.GetUserByEmail(email);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.User> GetUserByEmailAsync(string email) {
            return base.Channel.GetUserByEmailAsync(email);
        }
        
        public DedicatedClient.CinemaService.User GetUserByPhone(string phone) {
            return base.Channel.GetUserByPhone(phone);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.User> GetUserByPhoneAsync(string phone) {
            return base.Channel.GetUserByPhoneAsync(phone);
        }
        
        public DedicatedClient.CinemaService.User[] GetusersByPage(string page, string noperpage) {
            return base.Channel.GetusersByPage(page, noperpage);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.User[]> GetusersByPageAsync(string page, string noperpage) {
            return base.Channel.GetusersByPageAsync(page, noperpage);
        }
        
        public int CreateBooking(DedicatedClient.CinemaService.BookingModel model) {
            return base.Channel.CreateBooking(model);
        }
        
        public System.Threading.Tasks.Task<int> CreateBookingAsync(DedicatedClient.CinemaService.BookingModel model) {
            return base.Channel.CreateBookingAsync(model);
        }
        
        public void DeleteBooking(string bookingId) {
            base.Channel.DeleteBooking(bookingId);
        }
        
        public System.Threading.Tasks.Task DeleteBookingAsync(string bookingId) {
            return base.Channel.DeleteBookingAsync(bookingId);
        }
        
        public DedicatedClient.CinemaService.Booking GetBooking(string bookingId) {
            return base.Channel.GetBooking(bookingId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Booking> GetBookingAsync(string bookingId) {
            return base.Channel.GetBookingAsync(bookingId);
        }
        
        public DedicatedClient.CinemaService.Booking[] GetBookingsByPhone(string phone) {
            return base.Channel.GetBookingsByPhone(phone);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Booking[]> GetBookingsByPhoneAsync(string phone) {
            return base.Channel.GetBookingsByPhoneAsync(phone);
        }
        
        public DedicatedClient.CinemaService.Booking[] GetBookingsByScreeningId(string screeningId) {
            return base.Channel.GetBookingsByScreeningId(screeningId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Booking[]> GetBookingsByScreeningIdAsync(string screeningId) {
            return base.Channel.GetBookingsByScreeningIdAsync(screeningId);
        }
        
        public DedicatedClient.CinemaService.Booking[] GetAllBookingsByPage(string page, string noperpage) {
            return base.Channel.GetAllBookingsByPage(page, noperpage);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Booking[]> GetAllBookingsByPageAsync(string page, string noperpage) {
            return base.Channel.GetAllBookingsByPageAsync(page, noperpage);
        }
        
        public int CreateHall(DedicatedClient.CinemaService.Hall hall) {
            return base.Channel.CreateHall(hall);
        }
        
        public System.Threading.Tasks.Task<int> CreateHallAsync(DedicatedClient.CinemaService.Hall hall) {
            return base.Channel.CreateHallAsync(hall);
        }
        
        public void UpdateHall(DedicatedClient.CinemaService.Hall hall, string hallId) {
            base.Channel.UpdateHall(hall, hallId);
        }
        
        public System.Threading.Tasks.Task UpdateHallAsync(DedicatedClient.CinemaService.Hall hall, string hallId) {
            return base.Channel.UpdateHallAsync(hall, hallId);
        }
        
        public void DeleteHall(string hallId) {
            base.Channel.DeleteHall(hallId);
        }
        
        public System.Threading.Tasks.Task DeleteHallAsync(string hallId) {
            return base.Channel.DeleteHallAsync(hallId);
        }
        
        public DedicatedClient.CinemaService.Hall GetHall(string hallId) {
            return base.Channel.GetHall(hallId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Hall> GetHallAsync(string hallId) {
            return base.Channel.GetHallAsync(hallId);
        }
        
        public DedicatedClient.CinemaService.Hall GetHallByName(string hallName) {
            return base.Channel.GetHallByName(hallName);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Hall> GetHallByNameAsync(string hallName) {
            return base.Channel.GetHallByNameAsync(hallName);
        }
        
        public DedicatedClient.CinemaService.Hall[] GetAllHalls() {
            return base.Channel.GetAllHalls();
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Hall[]> GetAllHallsAsync() {
            return base.Channel.GetAllHallsAsync();
        }
        
        public void CreateSeat(DedicatedClient.CinemaService.Seat seat) {
            base.Channel.CreateSeat(seat);
        }
        
        public System.Threading.Tasks.Task CreateSeatAsync(DedicatedClient.CinemaService.Seat seat) {
            return base.Channel.CreateSeatAsync(seat);
        }
        
        public void UpdateSeat(DedicatedClient.CinemaService.Seat seat) {
            base.Channel.UpdateSeat(seat);
        }
        
        public System.Threading.Tasks.Task UpdateSeatAsync(DedicatedClient.CinemaService.Seat seat) {
            return base.Channel.UpdateSeatAsync(seat);
        }
        
        public void DeleteSeat(DedicatedClient.CinemaService.Seat seat) {
            base.Channel.DeleteSeat(seat);
        }
        
        public System.Threading.Tasks.Task DeleteSeatAsync(DedicatedClient.CinemaService.Seat seat) {
            return base.Channel.DeleteSeatAsync(seat);
        }
        
        public DedicatedClient.CinemaService.Ticket GetTicket(string ticketId) {
            return base.Channel.GetTicket(ticketId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Ticket> GetTicketAsync(string ticketId) {
            return base.Channel.GetTicketAsync(ticketId);
        }
        
        public DedicatedClient.CinemaService.TicketType GetTicketType(string tickettypeId) {
            return base.Channel.GetTicketType(tickettypeId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.TicketType> GetTicketTypeAsync(string tickettypeId) {
            return base.Channel.GetTicketTypeAsync(tickettypeId);
        }
        
        public DedicatedClient.CinemaService.TicketType GetTicketTypeByType(string ticketType) {
            return base.Channel.GetTicketTypeByType(ticketType);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.TicketType> GetTicketTypeByTypeAsync(string ticketType) {
            return base.Channel.GetTicketTypeByTypeAsync(ticketType);
        }
        
        public DedicatedClient.CinemaService.TicketType[] GetAllTicketTypes() {
            return base.Channel.GetAllTicketTypes();
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.TicketType[]> GetAllTicketTypesAsync() {
            return base.Channel.GetAllTicketTypesAsync();
        }
        
        public int CreateTicketType(DedicatedClient.CinemaService.TicketType tickettype) {
            return base.Channel.CreateTicketType(tickettype);
        }
        
        public System.Threading.Tasks.Task<int> CreateTicketTypeAsync(DedicatedClient.CinemaService.TicketType tickettype) {
            return base.Channel.CreateTicketTypeAsync(tickettype);
        }
        
        public void UpdateTicketType(DedicatedClient.CinemaService.TicketType tickettype, string tickettypeId) {
            base.Channel.UpdateTicketType(tickettype, tickettypeId);
        }
        
        public System.Threading.Tasks.Task UpdateTicketTypeAsync(DedicatedClient.CinemaService.TicketType tickettype, string tickettypeId) {
            return base.Channel.UpdateTicketTypeAsync(tickettype, tickettypeId);
        }
        
        public void DeleteTicketType(string tickettypeId) {
            base.Channel.DeleteTicketType(tickettypeId);
        }
        
        public System.Threading.Tasks.Task DeleteTicketTypeAsync(string tickettypeId) {
            return base.Channel.DeleteTicketTypeAsync(tickettypeId);
        }
        
        public int CreateMovie(DedicatedClient.CinemaService.Movie movie) {
            return base.Channel.CreateMovie(movie);
        }
        
        public System.Threading.Tasks.Task<int> CreateMovieAsync(DedicatedClient.CinemaService.Movie movie) {
            return base.Channel.CreateMovieAsync(movie);
        }
        
        public void UpdateMovie(DedicatedClient.CinemaService.Movie movie, string movieId) {
            base.Channel.UpdateMovie(movie, movieId);
        }
        
        public System.Threading.Tasks.Task UpdateMovieAsync(DedicatedClient.CinemaService.Movie movie, string movieId) {
            return base.Channel.UpdateMovieAsync(movie, movieId);
        }
        
        public void DeleteMovie(string movieId) {
            base.Channel.DeleteMovie(movieId);
        }
        
        public System.Threading.Tasks.Task DeleteMovieAsync(string movieId) {
            return base.Channel.DeleteMovieAsync(movieId);
        }
        
        public DedicatedClient.CinemaService.Movie GetMovie(string movieId) {
            return base.Channel.GetMovie(movieId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Movie> GetMovieAsync(string movieId) {
            return base.Channel.GetMovieAsync(movieId);
        }
        
        public DedicatedClient.CinemaService.Movie[] GetMoviePerPage(string page, string noperpage) {
            return base.Channel.GetMoviePerPage(page, noperpage);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Movie[]> GetMoviePerPageAsync(string page, string noperpage) {
            return base.Channel.GetMoviePerPageAsync(page, noperpage);
        }
        
        public DedicatedClient.CinemaService.Movie[] GetMoviesByTitle(string movieTitle) {
            return base.Channel.GetMoviesByTitle(movieTitle);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Movie[]> GetMoviesByTitleAsync(string movieTitle) {
            return base.Channel.GetMoviesByTitleAsync(movieTitle);
        }
        
        public int CreateMovieInfo(DedicatedClient.CinemaService.MovieInfo movieinfo) {
            return base.Channel.CreateMovieInfo(movieinfo);
        }
        
        public System.Threading.Tasks.Task<int> CreateMovieInfoAsync(DedicatedClient.CinemaService.MovieInfo movieinfo) {
            return base.Channel.CreateMovieInfoAsync(movieinfo);
        }
        
        public void UpdateMovieInfo(DedicatedClient.CinemaService.MovieInfo movieinfo, string movieinfoId) {
            base.Channel.UpdateMovieInfo(movieinfo, movieinfoId);
        }
        
        public System.Threading.Tasks.Task UpdateMovieInfoAsync(DedicatedClient.CinemaService.MovieInfo movieinfo, string movieinfoId) {
            return base.Channel.UpdateMovieInfoAsync(movieinfo, movieinfoId);
        }
        
        public void DeleteMovieInfo(string movieinfoId) {
            base.Channel.DeleteMovieInfo(movieinfoId);
        }
        
        public System.Threading.Tasks.Task DeleteMovieInfoAsync(string movieinfoId) {
            return base.Channel.DeleteMovieInfoAsync(movieinfoId);
        }
        
        public DedicatedClient.CinemaService.MovieInfo GetMovieInfo(string movieinfoId) {
            return base.Channel.GetMovieInfo(movieinfoId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.MovieInfo> GetMovieInfoAsync(string movieinfoId) {
            return base.Channel.GetMovieInfoAsync(movieinfoId);
        }
        
        public DedicatedClient.CinemaService.MovieInfo[] GetMovieInfosPerPage(string page, string noperpage) {
            return base.Channel.GetMovieInfosPerPage(page, noperpage);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.MovieInfo[]> GetMovieInfosPerPageAsync(string page, string noperpage) {
            return base.Channel.GetMovieInfosPerPageAsync(page, noperpage);
        }
        
        public int CreateScreening(DedicatedClient.CinemaService.Screening screening) {
            return base.Channel.CreateScreening(screening);
        }
        
        public System.Threading.Tasks.Task<int> CreateScreeningAsync(DedicatedClient.CinemaService.Screening screening) {
            return base.Channel.CreateScreeningAsync(screening);
        }
        
        public void UpdateScreening(DedicatedClient.CinemaService.Screening screening, string screeningId) {
            base.Channel.UpdateScreening(screening, screeningId);
        }
        
        public System.Threading.Tasks.Task UpdateScreeningAsync(DedicatedClient.CinemaService.Screening screening, string screeningId) {
            return base.Channel.UpdateScreeningAsync(screening, screeningId);
        }
        
        public void DeleteScreening(string screeningId) {
            base.Channel.DeleteScreening(screeningId);
        }
        
        public System.Threading.Tasks.Task DeleteScreeningAsync(string screeningId) {
            return base.Channel.DeleteScreeningAsync(screeningId);
        }
        
        public DedicatedClient.CinemaService.Screening GetScreening(string screeningId) {
            return base.Channel.GetScreening(screeningId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Screening> GetScreeningAsync(string screeningId) {
            return base.Channel.GetScreeningAsync(screeningId);
        }
        
        public DedicatedClient.CinemaService.Screening[] GetScreeningsPerPage(string page, string noperpage) {
            return base.Channel.GetScreeningsPerPage(page, noperpage);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Screening[]> GetScreeningsPerPageAsync(string page, string noperpage) {
            return base.Channel.GetScreeningsPerPageAsync(page, noperpage);
        }
        
        public DedicatedClient.CinemaService.Seat[] GetSeatsSuggestion(string screeningId, string noOfTickets) {
            return base.Channel.GetSeatsSuggestion(screeningId, noOfTickets);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.Seat[]> GetSeatsSuggestionAsync(string screeningId, string noOfTickets) {
            return base.Channel.GetSeatsSuggestionAsync(screeningId, noOfTickets);
        }
        
        public int CreateScreeningInfo(DedicatedClient.CinemaService.ScreeningInfo screeninginfo) {
            return base.Channel.CreateScreeningInfo(screeninginfo);
        }
        
        public System.Threading.Tasks.Task<int> CreateScreeningInfoAsync(DedicatedClient.CinemaService.ScreeningInfo screeninginfo) {
            return base.Channel.CreateScreeningInfoAsync(screeninginfo);
        }
        
        public void UpdateScreeningInfo(DedicatedClient.CinemaService.ScreeningInfo screeninginfo, string screeninginfoId) {
            base.Channel.UpdateScreeningInfo(screeninginfo, screeninginfoId);
        }
        
        public System.Threading.Tasks.Task UpdateScreeningInfoAsync(DedicatedClient.CinemaService.ScreeningInfo screeninginfo, string screeninginfoId) {
            return base.Channel.UpdateScreeningInfoAsync(screeninginfo, screeninginfoId);
        }
        
        public void DeleteScreeningInfo(string screeninginfoId) {
            base.Channel.DeleteScreeningInfo(screeninginfoId);
        }
        
        public System.Threading.Tasks.Task DeleteScreeningInfoAsync(string screeninginfoId) {
            return base.Channel.DeleteScreeningInfoAsync(screeninginfoId);
        }
        
        public DedicatedClient.CinemaService.ScreeningInfo GetScreeningInfo(string screeninginfoId) {
            return base.Channel.GetScreeningInfo(screeninginfoId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.ScreeningInfo> GetScreeningInfoAsync(string screeninginfoId) {
            return base.Channel.GetScreeningInfoAsync(screeninginfoId);
        }
        
        public DedicatedClient.CinemaService.ScreeningInfo[] GetScreeningInfosByMovieId(string movieId) {
            return base.Channel.GetScreeningInfosByMovieId(movieId);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.ScreeningInfo[]> GetScreeningInfosByMovieIdAsync(string movieId) {
            return base.Channel.GetScreeningInfosByMovieIdAsync(movieId);
        }
        
        public DedicatedClient.CinemaService.ScreeningInfo[] GetScreeningInfosByPage(string page, string noperpage) {
            return base.Channel.GetScreeningInfosByPage(page, noperpage);
        }
        
        public System.Threading.Tasks.Task<DedicatedClient.CinemaService.ScreeningInfo[]> GetScreeningInfosByPageAsync(string page, string noperpage) {
            return base.Channel.GetScreeningInfosByPageAsync(page, noperpage);
        }
    }
}
